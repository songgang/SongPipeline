% mrmr + svm leave one out
% use leave-one-out to separate training set and test set
%  do feature selection (mrmr) + train svm on the training set
%  test on the test set
% report:
%  1. selected features
%  2. the classification error vs the number of features

nb_fea = 25;

svm_opt = struct('name', '', 'fn', '', 'koptions', 0);

svm_opt(1).name = 'linear kernel';
svm_opt(1).fn = 'poly';
svm_opt(1).koptions = 1;

svm_opt(2).name = 'Gaussian kernel';
svm_opt(2).fn = 'gaussian';
svm_opt(2).koptions = 0.65;

nb_svm = length(svm_opt);

[p10, p11, p12, p13, p20, p21, p22, p23] = load_all_ILD_COPD_data();
xdata = [p10, p11,p12,p13; p20, p21, p22, p23];
ylabel = [ones(size(p10, 1),1); 2 * ones(size(p20, 1),1)];

[train_idx_list, test_idx_list] = generate_leave_one_out_lists(size(xdata,1));
nb_leave = size(train_idx_list, 1);

selection_list = {'mRMR', 'mRMR - PFT only', 'MaxRel'};

err_num_list = zeros(nb_leave, nb_fea, nb_svm, nb_selection);
selected_feature_list = zeros(nb_leave, nb_fea, nb_selection);

for mm = 1:nb_selection
    
    selection_method = selection_list{mm};
    
    for ii = 1:nb_leave

        idx_train = train_idx_list(ii, :);
        idx_test = train_idx_test(ii, :);
        
        switch
            case {'mRMR'}
                
                PFT_data_label_mrmr = get_metric_cat_mrmr2(PFT_data_label);
                metric_cat_mrmr = get_metric_cat_mrmr(metric_cat);
                mrmr_labels = {PFT_data_label_mrmr{:}, metric_cat_mrmr{:}};
                  [idx_fea_rank, fea_value] = feature_selection_ILD_COPD(xdata(idx_train, :), ylabel(idx_test, :), selection_method);

            case {'mRMR - PFT only'}
            case {'MaxRel'}
                    
        end;
        


        selected_feature_list(ii, :, mm) = idx_fea_rank;

        for kk = 1:nb_fea
           
            xdata_reordered = xdata(:, idx_fea_rank(1:kk));

            for jj = 1:length(svm_opt)

                fn = svm_opt(jj).fn;
                koptions = svm_opt(jj).koptions;

                
                [ypred, xsup, w, b, nsv, posaux_list] =  SVM_final(xdata_reorderd(idx_train, :), xdata_reorderd(idx_test, :), ylabel(idx_train), 2, fn,koptions);

                err_num_list(ii, kk, jj, mm) = sum(abs(ypred-y));
            end;
        end;

    end;
end;


ave_err_num_list = sum(err_num_list, 1) / nb_leave;
% plot
figure(12); clf; hold on;
plot(1:nb_fea, ave_err_num_list(1:nb_fea, 1, 1), 'go-');
plot(1:nb_fea, ave_err_num_list(1:nb_fea, 1, 2), 'b*-');
plot(1:nb_fea, ave_err_num_list(1:nb_fea, 1, 3), 'r+-');
hold off;
legend('MaxRel', 'mRMR - PFT only', 'mRMR');
title(svm_opt(1).name);

figure(13); clf; hold on;
plot(1:nb_fea, ave_err_num_list(1:nb_fea, 2, 1), 'go-');
plot(1:nb_fea, ave_err_num_list(1:nb_fea, 2, 2), 'b*-');
plot(1:nb_fea, ave_err_num_list(1:nb_fea, 2, 3), 'r+-');
hold off;
legend('MaxRel', 'mRMR - PFT only', 'mRMR');
title(svm_opt(2).name);


